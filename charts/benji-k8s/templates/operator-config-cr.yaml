---
apiVersion: benji-backup.me/v1alpha1
kind: BenjiOperatorConfig
metadata:
  name: {{ .Values.benji.instance | quote }}
  labels:
    app.kubernetes.io/name: {{ include "benji.name" $ }}
    helm.sh/chart: {{ include "benji.chart" $ }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  reconciliationSchedule: "*/15 * * * *"
  cleanupSchedule: "0 1 * * *"
  jobTemplate:
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: job
      labels:
        app.kubernetes.io/name: {{ include "benji.name" $ }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: "{{ .Values.benji.instance }}-operator"
    spec:
      ttlSecondsAfterFinished: 0
      backoffLimit: 0
      activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "benji.name" $ }}
            app.kubernetes.io/instance: {{ .Release.Name }}
            app.kubernetes.io/managed-by: "{{ .Values.benji.instance }}-operator"
        spec:
          serviceAccountName: {{ tuple . "" | include "benji.fullname" }}
          dnsPolicy: ClusterFirstWithHostNet
          restartPolicy: Never
          containers:
            - name: benji
              image: "{{ .Values.benji.image.registry }}/{{ .Values.benji.image.repository }}:{{ .Values.benji.image.tag }}"
              imagePullPolicy: {{ .Values.benji.image.pullPolicy }}
              securityContext:
                privileged: true
              command: []
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: BENJI_INSTANCE
                  value: {{ .Values.benji.instance | quote }}
                - name: PROM_PUSH_GATEWAY
                  value: "{{- printf "%s-%s" .Release.Name .Values.pushgateway.nameOverride | trunc 63 | trimSuffix "-" -}}:9091"
              volumeMounts:
                - name: benji-config
                  mountPath: /benji/etc
                - name: tz-config
                  mountPath: /etc/localtime
                {{- toYaml .Values.benji.volumeMounts | nindent 16 }}
{{ if .Values.benji.resources }}
              resources:
                {{- toYaml .Values.benji.resources | nindent 16 }}
{{- end }}
          hostNetwork: false
          volumes:
            - name: benji-config
              configMap:
                name: {{ tuple . "" | include "benji.fullname" }}
            - name: tz-config
              hostPath:
                path: /usr/share/zoneinfo/{{ .Values.timeZone }}
            {{- toYaml .Values.benji.volumes | nindent 12 }}
{{- with .Values.benji.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
{{- end }}
{{- with .Values.benji.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
{{- end }}
{{- with .Values.benji.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
{{- end }}
  cronJobTemplate:
    apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: cronjob
      labels:
        app.kubernetes.io/name: {{ include "benji.name" $ }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: "{{ .Values.benji.instance }}-operator"
    spec:
      schedule: '00 00 * * *'
      successfulJobsHistoryLimit: 1
      failedJobsHistoryLimit: 3
      concurrencyPolicy: Forbid
      jobTemplate:
        spec:
          ttlSecondsAfterFinished: 0
          backoffLimit: 0
          activeDeadlineSeconds: 3600
          template:
            metadata:
              labels:
                app.kubernetes.io/name: {{ include "benji.name" $ }}
                app.kubernetes.io/instance: {{ .Release.Name }}
                app.kubernetes.io/managed-by: "{{ .Values.benji.instance }}-operator"
            spec:
              serviceAccountName: {{ tuple . "" | include "benji.fullname" }}
              dnsPolicy: ClusterFirstWithHostNet
              restartPolicy: Never
              containers:
                - name: benji
                  image: "{{ .Values.benji.image.registry }}/{{ .Values.benji.image.repository }}:{{ .Values.benji.image.tag }}"
                  imagePullPolicy: {{ .Values.benji.image.pullPolicy }}
                  securityContext:
                    privileged: true
                  command: []
                  env:
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: POD_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: BENJI_INSTANCE
                      value: {{ .Values.benji.instance | quote }}
                    - name: PROM_PUSH_GATEWAY
                      value: "{{- printf "%s-%s" .Release.Name .Values.pushgateway.nameOverride | trunc 63 | trimSuffix "-" -}}:9091"
                  volumeMounts:
                    - name: benji-config
                      mountPath: /benji/etc
                    - name: tz-config
                      mountPath: /etc/localtime
                    {{- toYaml .Values.benji.volumeMounts | nindent 20 }}
{{ if .Values.benji.resources }}
                  resources:
                    {{- toYaml .Values.benji.resources | nindent 20 }}
{{- end }}
              hostNetwork: false
              volumes:
                - name: benji-config
                  configMap:
                    name: {{ tuple . "" | include "benji.fullname" }}
                - name: tz-config
                  hostPath:
                    path: /usr/share/zoneinfo/{{ .Values.timeZone }}
                {{- toYaml .Values.benji.volumes | nindent 16 }}
{{- with .Values.benji.nodeSelector }}
              nodeSelector:
                {{- toYaml . | nindent 16 }}
{{- end }}
{{- with .Values.benji.affinity }}
              affinity:
                {{- toYaml . | nindent 16 }}
{{- end }}
{{- with .Values.benji.tolerations }}
              tolerations:
                {{- toYaml . | nindent 16 }}
{{- end }}
